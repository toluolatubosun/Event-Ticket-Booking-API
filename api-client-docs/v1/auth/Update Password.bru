meta {
  name: Update Password
  type: http
  seq: 5
}

put {
  url: {{BASE_URL}}/v1/auth/update-password
  body: json
  auth: bearer
}

auth:bearer {
  token: {{ACCESS_TOKEN}}
}

body:json {
  {
    "current_password": "oldpassword123",
    "new_password": "newpassword123"
  }
}

assert {
  res.status: eq 200
  res.body.success: eq true
  res.body.message: eq "password updated successfully"
  res.body.data.message: eq "Password updated successfully"
}

tests {
  test("should update password successfully", function() {
    expect(res.getStatus()).to.equal(200);
    expect(res.getBody().success).to.be.true;
    expect(res.getBody().message).to.equal("password updated successfully");
    expect(res.getBody().data.message).to.equal("Password updated successfully");
  });
}

docs {
  # Update Password

  Updates the current user's password. Requires authentication via Bearer token.

  ## Request Body

  - `current_password` (string, required): The user's current password for verification
  - `new_password` (string, required): The new password (minimum 6 characters)

  ## Response

  ### Success (200)
  ```json
  {
    "success": true,
    "message": "password updated successfully",
    "data": {
      "message": "Password updated successfully"
    }
  }
  ```

  ### Error (400)
  ```json
  {
    "success": false,
    "message": "Current password is incorrect",
    "data": null
  }
  ```

  ### Error (401)
  ```json
  {
    "success": false,
    "message": "unauthorized access: token not found",
    "data": null
  }
  ```

  ## Notes

  - Requires valid authentication token
  - Current password must be correct
  - New password must be at least 6 characters long
  - Password is securely hashed before storage
}
